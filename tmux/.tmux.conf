# Replace C-b with C-a for the prefix key
unbind C-b
set -g prefix C-a
bind-key -r C-a send-prefix

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set-window-option -g xterm-keys on

# set -g default-terminal "st-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

set-option -g destroy-unattached off

# set-window-option -g aggressive-resize on
bind -r a resize-pane -L 5
bind -r w resize-pane -U 5
bind -r s resize-pane -D 5
bind -r d resize-pane -R 5

# More intuitive pane splitting key-bindings, open all in current path
bind - split-window -v  -c '#{pane_current_path}'
bind \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?(ruby)?$"'
is_emacs='echo "#{pane_current_command}" | grep -iqE "emacs|reattach-to-user-namespace"'
bind -n C-h if-shell "$is_emacs" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_emacs" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_emacs" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_emacs" "send-keys C-l" "select-pane -R"

# Number windows starting at 1, renumber as windows are added / removed
set-option -g base-index 1
set-option -g renumber-windows on

# Number pages starting at 1
setw -g pane-base-index 1

bind-key b break-pane -d

# Use vi keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter

set-option -g default-shell /bin/bash

# Sample quick-pane configurations
# bind-key t split-window -h -c ~/ "vim todo.md"

bind-key C-r split-window -h -p 50 -c '#{pane_current_path}' ranger
bind-key C-g split-window -h -p 50 -c '#{pane_current_path}' git-sh
bind-key C-h split-window -h -p 50 -c '#{pane_current_path}' tig
bind-key C-t split-window -h -p 50 htop

# Fuzzy matching session navigation via fzf utility
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*\$//' | grep -v \"^(tmux display-message -p '#S')\\\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key m display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# # "break session" and "kill session" without exiting tmux
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# # better delay when sending commands
set -s escape-time 1

# quicker without moused and selecting text with it enabled mess up the selection
setw -g mouse off

# # Colors
set -g status-fg '#000000'
set -g status-bg '#97d88a'

# # command input
# set -g message-fg '#839496'
# set -g message-bg '#53565a'
# set -g message-attr none

# setw -g window-status-fg '#eeeeee'
# setw -g window-status-bg '#494949'

setw -g window-status-current-fg '#f1f2f1'
setw -g window-status-current-bg '#546758'

# set -g pane-border-fg '#6c6c6c'
# set -g pane-border-bg '#6c6c6c'

set -g pane-active-border-fg '#546758'
set -g pane-active-border-bg '#546758'

set -g status-left-length 50
set -g status-left "ï¸Ž#S #[fg=#3a499c]#I #[fg=#bc3e44]#P "
set -g status-right ""

# # centering window list
set -g status-justify centre

# # changing window color in status bar when there is activity
setw -g monitor-activity on
# setw -g window-status-activity-fg '#002b36'
# setw -g window-status-activity-bg '#f38220'
set-window-option -g window-status-activity-attr none

set -g visual-activity on
